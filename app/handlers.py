from aiogram import types, Router,F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from app.keyboard import main_keyboard,setting_currency
import app.parcer as parc


#############################################

router = Router()

class Form(StatesGroup):
    need_currency = State()


#############################################

@router.message(Command('start'))
async def start_menu(message: types.Message):
    await message.answer(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!\n'
        f'–≠—Ç–æ—Ç –±–æ—Ç –¥–æ–ª–∂–µ–Ω —É–ø—Ä–æ—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ —Ä—ã–Ω–∫–µ –≤–∞–ª—é—Ç.\n–û—Ä–∏–µ–Ω—Ç–∏—Ä—É–π—Ç–µ—Å—å –ø–æ –∫–Ω–æ–ø–∫–∞–º!',
        reply_markup=main_keyboard
    )

@router.message(F.text == '–ö—É—Ä—Å –≤–∞–ª—é—Ç(–¶–ë –†–§)üèõÔ∏è')
async def currency(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º.", reply_markup=setting_currency)

#############################################

@router.callback_query(F.data == 'need_currency')
async def find_currency(callback: types.CallbackQuery,state: FSMContext):
    await callback.message.delete()
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞–ª—é—Ç—É.\n\n"\
    "–ü—Ä–∞–≤–∏–ª–æ –≤–≤–æ–¥–∞: 1)‚ùó–ñ–ï–õ–ê–¢–ï–õ–¨–ù–û‚ùó –≤–≤–æ–¥–∏—Ç—å –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ.\n\n"\
    "2)–ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–≤–æ–¥–∞üëç: –ê–≤—Å—Ç—Ä–∞–ª–∏–π—Å–∫–∏–π –¥–æ–ª–ª–∞—Ä\n\n"\
    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ!")
    await state.set_state(Form.need_currency)

@router.message(Form.need_currency)
async def print_currency(message: types.Message, state: FSMContext):

    await message.answer(parc.get_currency(f"https://yandex.ru/search/?text=–∫—É—Ä—Å+{message.text}+–∫+—Ä—É–±–ª—é"),reply_markup=main_keyboard)
    await state.clear()

#############################################

@router.callback_query(F.data == "world_currency")
async def world_currency(callback: types.CallbackQuery):
    await callback.message.delete()
    info_world_currency = parc.get_all_currency()
    for item in info_world_currency:
        '''
        —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ info_world_currency
        [['840', 'USD', '1', '–î–æ–ª–ª–∞—Ä –°–®–ê', '87,9595'],...]
        '''
        —Åurrency_codename = item[1]
        currency_nums = item[2]
        currency_name = item[3]
        currency_value = item[4]
        

        await callback.message.answer(f"üíµ{currency_nums} {—Åurrency_codename} ({currency_name}) - {currency_value}‚ÇΩ",
        reply_markup=main_keyboard)


